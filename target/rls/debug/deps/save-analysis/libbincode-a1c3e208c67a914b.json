{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0","program":"/Users/yunyizhang/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","bincode","/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=a1c3e208c67a914b","-C","extra-filename=-a1c3e208c67a914b","--out-dir","/Users/yunyizhang/Desktop/UIUC-Learning/ECE598-BlockChain-20sp/midterm-project/target/rls/debug/deps","-L","dependency=/Users/yunyizhang/Desktop/UIUC-Learning/ECE598-BlockChain-20sp/midterm-project/target/rls/debug/deps","--extern","byteorder=/Users/yunyizhang/Desktop/UIUC-Learning/ECE598-BlockChain-20sp/midterm-project/target/rls/debug/deps/libbyteorder-ae4a7ca26f8f29de.rmeta","--extern","serde=/Users/yunyizhang/Desktop/UIUC-Learning/ECE598-BlockChain-20sp/midterm-project/target/rls/debug/deps/libserde-2b97d6ae804a8056.rmeta","--cap-lints","allow","--cfg","has_i128","--error-format=json","--sysroot","/Users/yunyizhang/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/yunyizhang/Desktop/UIUC-Learning/ECE598-BlockChain-20sp/midterm-project/target/rls/debug/deps/libbincode-a1c3e208c67a914b.rmeta"},"prelude":{"crate_id":{"name":"bincode","disambiguator":[1972817113326842144,10292936663578371716]},"crate_root":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src","external_crates":[{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[12480940028815742386,17133840292323062676]}},{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[12740277115278631702,12640810556085455126]}},{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[9032649326521538135,12667967411968509476]}},{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[10009283058736322418,8662397509334631840]}},{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[3924216512132021142,13433065908605684942]}},{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[3030377414627030993,4885163689723098329]}},{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[13235301763130876389,11956675772311029582]}},{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[5839480494490908876,4697973287732230237]}},{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[1041246640194432752,18216372201816767321]}},{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[4759184321302818619,12022396673976004994]}},{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[1295962249923865998,4753204618089216455]}},{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[11309261669264167917,12633313349437080871]}},{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[11563747115584760512,7975991426192958756]}},{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[2660116328215505580,9545010463301493925]}},{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/lib.rs","num":15,"id":{"name":"byteorder","disambiguator":[11534261394088515245,4495569439774767911]}},{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/lib.rs","num":16,"id":{"name":"serde","disambiguator":[2898205205610782488,9298543124930482902]}},{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/lib.rs","num":17,"id":{"name":"serde_derive","disambiguator":[6396550326214012065,16268448659572632069]}}],"span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/lib.rs","byte_start":0,"byte_end":5089,"line_start":1,"line_end":173,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":63},"span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/lib.rs","byte_start":1074,"byte_end":1080,"line_start":41,"line_end":41,"column_start":17,"column_end":23},"alias_span":null,"name":"Config","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":160},"span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/lib.rs","byte_start":1101,"byte_end":1112,"line_start":42,"line_end":42,"column_start":20,"column_end":31},"alias_span":null,"name":"BincodeRead","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":170},"span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/lib.rs","byte_start":1114,"byte_end":1122,"line_start":42,"line_end":42,"column_start":33,"column_end":41},"alias_span":null,"name":"IoReader","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":167},"span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/lib.rs","byte_start":1124,"byte_end":1135,"line_start":42,"line_end":42,"column_start":43,"column_end":54},"alias_span":null,"name":"SliceReader","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":349},"span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/lib.rs","byte_start":1154,"byte_end":1159,"line_start":43,"line_end":43,"column_start":17,"column_end":22},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":787},"span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/lib.rs","byte_start":1161,"byte_end":1170,"line_start":43,"line_end":43,"column_start":24,"column_end":33},"alias_span":null,"name":"ErrorKind","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":347},"span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/lib.rs","byte_start":1172,"byte_end":1178,"line_start":43,"line_end":43,"column_start":35,"column_end":41},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/lib.rs","byte_start":0,"byte_end":5089,"line_start":1,"line_end":173,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":143},{"krate":0,"index":339},{"krate":0,"index":363},{"krate":0,"index":432},{"krate":0,"index":700},{"krate":0,"index":701},{"krate":0,"index":705},{"krate":0,"index":709},{"krate":0,"index":714},{"krate":0,"index":718},{"krate":0,"index":719},{"krate":0,"index":722},{"krate":0,"index":724},{"krate":0,"index":727},{"krate":0,"index":731},{"krate":0,"index":735},{"krate":0,"index":738},{"krate":0,"index":740},{"krate":0,"index":744}],"decl_id":null,"docs":" Bincode is a crate for encoding and decoding using a tiny binary\n serialization strategy.  Using it, you can easily go from having\n an object in memory, quickly serialize it to bytes, and then\n deserialize it back just as fast!","sig":null,"attributes":[{"value":"deny(missing_docs)","span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/lib.rs","byte_start":0,"byte_end":22,"line_start":1,"line_end":1,"column_start":1,"column_end":23}},{"value":"crate_name = \"bincode\"","span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/lib.rs","byte_start":868,"byte_end":894,"line_start":27,"line_end":27,"column_start":1,"column_end":27}},{"value":"crate_type = \"rlib\"","span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/lib.rs","byte_start":895,"byte_end":918,"line_start":28,"line_end":28,"column_start":1,"column_end":24}},{"value":"crate_type = \"dylib\"","span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/lib.rs","byte_start":919,"byte_end":943,"line_start":29,"line_end":29,"column_start":1,"column_end":25}}]},{"kind":"Type","id":{"krate":0,"index":40},"span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/config.rs","byte_start":5499,"byte_end":5504,"line_start":16,"line_end":16,"column_start":10,"column_end":15},"name":"Limit","qualname":"::config::Options::Limit","value":"type Limit: SizeLimit + 'static;","parent":{"krate":0,"index":39},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":41},"span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/config.rs","byte_start":5536,"byte_end":5542,"line_start":17,"line_end":17,"column_start":10,"column_end":16},"name":"Endian","qualname":"::config::Options::Endian","value":"type Endian: ByteOrder + 'static;","parent":{"krate":0,"index":39},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":63},"span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/config.rs","byte_start":7709,"byte_end":7715,"line_start":98,"line_end":98,"column_start":12,"column_end":18},"name":"Config","qualname":"::config::Config","value":"Config {  }","parent":null,"children":[{"krate":0,"index":64},{"krate":0,"index":65}],"decl_id":null,"docs":" A configuration builder whose options Bincode will use\n while serializing and deserializing.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/config.rs","byte_start":10306,"byte_end":10314,"line_start":196,"line_end":196,"column_start":12,"column_end":20},"name":"no_limit","qualname":"<Config>::no_limit","value":"fn (&mut self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the byte limit to be unlimited.\n This is the default.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/config.rs","byte_start":10277,"byte_end":10294,"line_start":195,"line_end":195,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/config.rs","byte_start":10479,"byte_end":10484,"line_start":203,"line_end":203,"column_start":12,"column_end":17},"name":"limit","qualname":"<Config>::limit","value":"fn (&mut self, limit: u64) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the byte limit to `limit`.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/config.rs","byte_start":10450,"byte_end":10467,"line_start":202,"line_end":202,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/config.rs","byte_start":10700,"byte_end":10713,"line_start":211,"line_end":211,"column_start":12,"column_end":25},"name":"little_endian","qualname":"<Config>::little_endian","value":"fn (&mut self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the endianness to little-endian\n This is the default.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/config.rs","byte_start":10671,"byte_end":10688,"line_start":210,"line_end":210,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/config.rs","byte_start":10879,"byte_end":10889,"line_start":218,"line_end":218,"column_start":12,"column_end":22},"name":"big_endian","qualname":"<Config>::big_endian","value":"fn (&mut self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the endianness to big-endian\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/config.rs","byte_start":10850,"byte_end":10867,"line_start":217,"line_end":217,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/config.rs","byte_start":11075,"byte_end":11088,"line_start":225,"line_end":225,"column_start":12,"column_end":25},"name":"native_endian","qualname":"<Config>::native_endian","value":"fn (&mut self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the endianness to the the machine-native endianness\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/config.rs","byte_start":11046,"byte_end":11063,"line_start":224,"line_end":224,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/config.rs","byte_start":11300,"byte_end":11309,"line_start":232,"line_end":232,"column_start":12,"column_end":21},"name":"serialize","qualname":"<Config>::serialize","value":"fn <T> (&self, t: &T) -> Result<Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Serializes a serializable object into a `Vec` of bytes using this configuration\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/config.rs","byte_start":11271,"byte_end":11288,"line_start":231,"line_end":231,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/config.rs","byte_start":11582,"byte_end":11597,"line_start":238,"line_end":238,"column_start":12,"column_end":27},"name":"serialized_size","qualname":"<Config>::serialized_size","value":"fn <T> (&self, t: &T) -> Result<u64>","parent":null,"children":[],"decl_id":null,"docs":" Returns the size that an object would be if serialized using Bincode with this configuration\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/config.rs","byte_start":11553,"byte_end":11570,"line_start":237,"line_end":237,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/config.rs","byte_start":12019,"byte_end":12033,"line_start":247,"line_end":247,"column_start":12,"column_end":26},"name":"serialize_into","qualname":"<Config>::serialize_into","value":"fn <W, T> (&self, w: W, t: &T) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Serializes an object directly into a `Writer` using this configuration","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/config.rs","byte_start":11990,"byte_end":12007,"line_start":246,"line_end":246,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/config.rs","byte_start":12342,"byte_end":12353,"line_start":257,"line_end":257,"column_start":12,"column_end":23},"name":"deserialize","qualname":"<Config>::deserialize","value":"fn <'a, T> (&self, bytes: &'a [u8]) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Deserializes a slice of bytes into an instance of `T` using this configuration\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/config.rs","byte_start":12313,"byte_end":12330,"line_start":256,"line_end":256,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/config.rs","byte_start":12578,"byte_end":12598,"line_start":264,"line_end":264,"column_start":12,"column_end":32},"name":"deserialize_in_place","qualname":"<Config>::deserialize_in_place","value":"fn <'a, R, T> (&self, reader: R, place: &mut T) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" TODO: document\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/config.rs","byte_start":12549,"byte_end":12566,"line_start":263,"line_end":263,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":118},"span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/config.rs","byte_start":12950,"byte_end":12966,"line_start":274,"line_end":274,"column_start":12,"column_end":28},"name":"deserialize_seed","qualname":"<Config>::deserialize_seed","value":"fn <'a, T> (&self, seed: T, bytes: &'a [u8]) -> Result<T::Value>","parent":null,"children":[],"decl_id":null,"docs":" Deserializes a slice of bytes with state `seed` using this configuration.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/config.rs","byte_start":12921,"byte_end":12938,"line_start":273,"line_end":273,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":121},"span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/config.rs","byte_start":13377,"byte_end":13393,"line_start":286,"line_end":286,"column_start":12,"column_end":28},"name":"deserialize_from","qualname":"<Config>::deserialize_from","value":"fn <R, T> (&self, reader: R) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Deserializes an object directly from a `Read`er using this configuration","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/config.rs","byte_start":13348,"byte_end":13365,"line_start":285,"line_end":285,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/config.rs","byte_start":13789,"byte_end":13810,"line_start":297,"line_end":297,"column_start":12,"column_end":33},"name":"deserialize_from_seed","qualname":"<Config>::deserialize_from_seed","value":"fn <'a, R, T> (&self, seed: T, reader: R) -> Result<T::Value>","parent":null,"children":[],"decl_id":null,"docs":" Deserializes an object directly from a `Read`er with state `seed` using this configuration","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/config.rs","byte_start":13760,"byte_end":13777,"line_start":296,"line_end":296,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":128},"span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/config.rs","byte_start":14378,"byte_end":14401,"line_start":311,"line_end":311,"column_start":12,"column_end":35},"name":"deserialize_from_custom","qualname":"<Config>::deserialize_from_custom","value":"fn <'a, R, T> (&self, reader: R) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Deserializes an object from a custom `BincodeRead`er using the default configuration.\n It is highly recommended to use `deserialize_from` unless you need to implement\n `BincodeRead` for performance reasons.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/config.rs","byte_start":14349,"byte_end":14366,"line_start":310,"line_end":310,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/config.rs","byte_start":14967,"byte_end":14995,"line_start":324,"line_end":324,"column_start":12,"column_end":40},"name":"deserialize_from_custom_seed","qualname":"<Config>::deserialize_from_custom_seed","value":"fn <'a, R, T> (&self, seed: T, reader: R) -> Result<T::Value>","parent":null,"children":[],"decl_id":null,"docs":" Deserializes an object from a custom `BincodeRead`er with state `seed` using the default\n configuration. It is highly recommended to use `deserialize_from` unless you need to\n implement `BincodeRead` for performance reasons.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/config.rs","byte_start":14938,"byte_end":14955,"line_start":323,"line_end":323,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/config.rs","byte_start":15410,"byte_end":15427,"line_start":339,"line_end":339,"column_start":12,"column_end":29},"name":"with_deserializer","qualname":"<Config>::with_deserializer","value":"fn <'a, A, R> (&self, reader: R, acceptor: A) -> A::Output","parent":null,"children":[],"decl_id":null,"docs":" Executes the acceptor with a serde::Deserializer instance.\n NOT A PART OF THE STABLE PUBLIC API\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/config.rs","byte_start":15877,"byte_end":15892,"line_start":353,"line_end":353,"column_start":12,"column_end":27},"name":"with_serializer","qualname":"<Config>::with_serializer","value":"fn <A, W> (&self, writer: W, acceptor: A) -> A::Output","parent":null,"children":[],"decl_id":null,"docs":" Executes the acceptor with a serde::Serializer instance.\n NOT A PART OF THE STABLE PUBLIC API\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":160},"span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/de/read.rs","byte_start":30722,"byte_end":30733,"line_start":9,"line_end":9,"column_start":11,"column_end":22},"name":"BincodeRead","qualname":"::de::read::BincodeRead","value":"BincodeRead<'storage>: io::Read","parent":null,"children":[{"krate":0,"index":162},{"krate":0,"index":164},{"krate":0,"index":165}],"decl_id":null,"docs":" An optional Read trait for advanced Bincode usage.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/de/read.rs","byte_start":30839,"byte_end":30855,"line_start":11,"line_end":11,"column_start":8,"column_end":24},"name":"forward_read_str","qualname":"::de::read::BincodeRead::forward_read_str","value":"fn <V> (&mut self, length: usize, visitor: V) -> Result<V::Value>","parent":{"krate":0,"index":160},"children":[],"decl_id":null,"docs":" Forwards reading `length` bytes of a string on to the serde reader.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/de/read.rs","byte_start":31045,"byte_end":31060,"line_start":16,"line_end":16,"column_start":8,"column_end":23},"name":"get_byte_buffer","qualname":"::de::read::BincodeRead::get_byte_buffer","value":"fn (&mut self, length: usize) -> Result<Vec<u8>>","parent":{"krate":0,"index":160},"children":[],"decl_id":null,"docs":" Return the first `length` bytes of the internal byte buffer.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":165},"span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/de/read.rs","byte_start":31179,"byte_end":31197,"line_start":19,"line_end":19,"column_start":8,"column_end":26},"name":"forward_read_bytes","qualname":"::de::read::BincodeRead::forward_read_bytes","value":"fn <V> (&mut self, length: usize, visitor: V) -> Result<V::Value>","parent":{"krate":0,"index":160},"children":[],"decl_id":null,"docs":" Forwards reading `length` bytes on to the serde reader.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":167},"span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/de/read.rs","byte_start":31428,"byte_end":31439,"line_start":27,"line_end":27,"column_start":12,"column_end":23},"name":"SliceReader","qualname":"::de::read::SliceReader","value":"SliceReader {  }","parent":null,"children":[{"krate":0,"index":169}],"decl_id":null,"docs":" A BincodeRead implementation for byte slices\n NOT A PART OF THE STABLE PUBLIC API\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":170},"span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/de/read.rs","byte_start":31597,"byte_end":31605,"line_start":34,"line_end":34,"column_start":12,"column_end":20},"name":"IoReader","qualname":"::de::read::IoReader","value":"IoReader {  }","parent":null,"children":[{"krate":0,"index":172},{"krate":0,"index":173}],"decl_id":null,"docs":" A BincodeRead implementation for io::Readers\n NOT A PART OF THE STABLE PUBLIC API\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/de/read.rs","byte_start":31739,"byte_end":31742,"line_start":41,"line_end":41,"column_start":12,"column_end":15},"name":"new","qualname":"<SliceReader>::new","value":"fn (bytes: &'storage [u8]) -> SliceReader<'storage>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a slice reader\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/de/read.rs","byte_start":31907,"byte_end":31910,"line_start":48,"line_end":48,"column_start":12,"column_end":15},"name":"new","qualname":"<IoReader<R>>::new","value":"fn (r: R) -> IoReader<R>","parent":null,"children":[],"decl_id":null,"docs":" Constructs an IoReadReader\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":347},"span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/error.rs","byte_start":35784,"byte_end":35790,"line_start":9,"line_end":9,"column_start":10,"column_end":16},"name":"Result","qualname":"::error::Result","value":"::std::result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" The result of a serialization or deserialization operation.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":349},"span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/error.rs","byte_start":35897,"byte_end":35902,"line_start":12,"line_end":12,"column_start":10,"column_end":15},"name":"Error","qualname":"::error::Error","value":"Box<ErrorKind>","parent":null,"children":[],"decl_id":null,"docs":" An error that can be produced during (de)serializing.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":788},"span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/error.rs","byte_start":36198,"byte_end":36200,"line_start":19,"line_end":19,"column_start":5,"column_end":7},"name":"Io","qualname":"::error::ErrorKind::Io","value":"ErrorKind::Io(io::Error)","parent":{"krate":0,"index":787},"children":[],"decl_id":null,"docs":" If the error stems from the reader/writer that is being used\n during (de)serialization, that error will be stored and returned here.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":791},"span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/error.rs","byte_start":36310,"byte_end":36329,"line_start":21,"line_end":21,"column_start":5,"column_end":24},"name":"InvalidUtf8Encoding","qualname":"::error::ErrorKind::InvalidUtf8Encoding","value":"ErrorKind::InvalidUtf8Encoding(Utf8Error)","parent":{"krate":0,"index":787},"children":[],"decl_id":null,"docs":" Returned if the deserializer attempts to deserialize a string that is not valid utf8\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":794},"span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/error.rs","byte_start":36464,"byte_end":36483,"line_start":24,"line_end":24,"column_start":5,"column_end":24},"name":"InvalidBoolEncoding","qualname":"::error::ErrorKind::InvalidBoolEncoding","value":"ErrorKind::InvalidBoolEncoding(u8)","parent":{"krate":0,"index":787},"children":[],"decl_id":null,"docs":" Returned if the deserializer attempts to deserialize a bool that was\n not encoded as either a 1 or a 0\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":797},"span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/error.rs","byte_start":36596,"byte_end":36615,"line_start":26,"line_end":26,"column_start":5,"column_end":24},"name":"InvalidCharEncoding","qualname":"::error::ErrorKind::InvalidCharEncoding","value":"ErrorKind::InvalidCharEncoding","parent":{"krate":0,"index":787},"children":[],"decl_id":null,"docs":" Returned if the deserializer attempts to deserialize a char that is not in the correct format.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":799},"span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/error.rs","byte_start":36744,"byte_end":36762,"line_start":29,"line_end":29,"column_start":5,"column_end":23},"name":"InvalidTagEncoding","qualname":"::error::ErrorKind::InvalidTagEncoding","value":"ErrorKind::InvalidTagEncoding(usize)","parent":{"krate":0,"index":787},"children":[],"decl_id":null,"docs":" Returned if the deserializer attempts to deserialize the tag of an enum that is\n not in the expected ranges\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":802},"span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/error.rs","byte_start":36904,"byte_end":36930,"line_start":32,"line_end":32,"column_start":5,"column_end":31},"name":"DeserializeAnyNotSupported","qualname":"::error::ErrorKind::DeserializeAnyNotSupported","value":"ErrorKind::DeserializeAnyNotSupported","parent":{"krate":0,"index":787},"children":[],"decl_id":null,"docs":" Serde has a deserialize_any method that lets the format hint to the\n object which route to take in deserializing.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":804},"span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/error.rs","byte_start":37046,"byte_end":37055,"line_start":35,"line_end":35,"column_start":5,"column_end":14},"name":"SizeLimit","qualname":"::error::ErrorKind::SizeLimit","value":"ErrorKind::SizeLimit","parent":{"krate":0,"index":787},"children":[],"decl_id":null,"docs":" If (de)serializing a message takes more than the provided size limit, this\n error is returned.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":806},"span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/error.rs","byte_start":37138,"byte_end":37160,"line_start":37,"line_end":37,"column_start":5,"column_end":27},"name":"SequenceMustHaveLength","qualname":"::error::ErrorKind::SequenceMustHaveLength","value":"ErrorKind::SequenceMustHaveLength","parent":{"krate":0,"index":787},"children":[],"decl_id":null,"docs":" Bincode can not encode sequences of unknown length (like iterators).\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":808},"span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/error.rs","byte_start":37209,"byte_end":37215,"line_start":39,"line_end":39,"column_start":5,"column_end":11},"name":"Custom","qualname":"::error::ErrorKind::Custom","value":"ErrorKind::Custom(String)","parent":{"krate":0,"index":787},"children":[],"decl_id":null,"docs":" A custom error message from Serde.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":787},"span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/error.rs","byte_start":36034,"byte_end":36043,"line_start":16,"line_end":16,"column_start":10,"column_end":19},"name":"ErrorKind","qualname":"::error::ErrorKind","value":"ErrorKind::{Io, InvalidUtf8Encoding, InvalidBoolEncoding, InvalidCharEncoding, InvalidTagEncoding, DeserializeAnyNotSupported, SizeLimit, SequenceMustHaveLength, Custom}","parent":null,"children":[{"krate":0,"index":788},{"krate":0,"index":791},{"krate":0,"index":794},{"krate":0,"index":797},{"krate":0,"index":799},{"krate":0,"index":802},{"krate":0,"index":804},{"krate":0,"index":806},{"krate":0,"index":808}],"decl_id":null,"docs":" The kind of error that can be produced during a serialization or deserialization.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":709},"span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/lib.rs","byte_start":1397,"byte_end":1417,"line_start":50,"line_end":50,"column_start":11,"column_end":31},"name":"DeserializerAcceptor","qualname":"::DeserializerAcceptor","value":"DeserializerAcceptor<'a>","parent":null,"children":[{"krate":0,"index":711},{"krate":0,"index":712}],"decl_id":null,"docs":" An object that implements this trait can be passed a\n serde::Deserializer without knowing its concrete type.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":711},"span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/lib.rs","byte_start":1479,"byte_end":1485,"line_start":52,"line_end":52,"column_start":10,"column_end":16},"name":"Output","qualname":"::DeserializerAcceptor::Output","value":"type Output;","parent":{"krate":0,"index":709},"children":[],"decl_id":null,"docs":" The return type for the accept method\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":712},"span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/lib.rs","byte_start":1565,"byte_end":1571,"line_start":54,"line_end":54,"column_start":8,"column_end":14},"name":"accept","qualname":"::DeserializerAcceptor::accept","value":"fn <T> (self, T) -> Self::Output","parent":{"krate":0,"index":709},"children":[],"decl_id":null,"docs":" Accept a serde::Deserializer and do whatever you want with it.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":714},"span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/lib.rs","byte_start":1840,"byte_end":1858,"line_start":62,"line_end":62,"column_start":11,"column_end":29},"name":"SerializerAcceptor","qualname":"::SerializerAcceptor","value":"SerializerAcceptor","parent":null,"children":[{"krate":0,"index":715},{"krate":0,"index":716}],"decl_id":null,"docs":" An object that implements this trait can be passed a\n serde::Serializer without knowing its concrete type.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":715},"span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/lib.rs","byte_start":1916,"byte_end":1922,"line_start":64,"line_end":64,"column_start":10,"column_end":16},"name":"Output","qualname":"::SerializerAcceptor::Output","value":"type Output;","parent":{"krate":0,"index":714},"children":[],"decl_id":null,"docs":" The return type for the accept method\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":716},"span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/lib.rs","byte_start":2000,"byte_end":2006,"line_start":66,"line_end":66,"column_start":8,"column_end":14},"name":"accept","qualname":"::SerializerAcceptor::accept","value":"fn <T> (self, T) -> Self::Output","parent":{"krate":0,"index":714},"children":[],"decl_id":null,"docs":" Accept a serde::Serializer and do whatever you want with it.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":718},"span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/lib.rs","byte_start":2258,"byte_end":2264,"line_start":77,"line_end":77,"column_start":8,"column_end":14},"name":"config","qualname":"::config","value":"fn () -> Config","parent":null,"children":[],"decl_id":null,"docs":" Get a default configuration object.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/lib.rs","byte_start":2233,"byte_end":2250,"line_start":76,"line_end":76,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":719},"span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/lib.rs","byte_start":2548,"byte_end":2562,"line_start":85,"line_end":85,"column_start":8,"column_end":22},"name":"serialize_into","qualname":"::serialize_into","value":"fn <W, T> (writer: W, value: &T) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Serializes an object directly into a `Writer` using the default configuration.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":722},"span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/lib.rs","byte_start":2814,"byte_end":2823,"line_start":94,"line_end":94,"column_start":8,"column_end":17},"name":"serialize","qualname":"::serialize","value":"fn <T> (value: &T) -> Result<Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Serializes a serializable object into a `Vec` of bytes using the default configuration.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":724},"span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/lib.rs","byte_start":3096,"byte_end":3112,"line_start":104,"line_end":104,"column_start":8,"column_end":24},"name":"deserialize_from","qualname":"::deserialize_from","value":"fn <R, T> (reader: R) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Deserializes an object directly from a `Read`er using the default configuration.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":727},"span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/lib.rs","byte_start":3547,"byte_end":3570,"line_start":117,"line_end":117,"column_start":8,"column_end":31},"name":"deserialize_from_custom","qualname":"::deserialize_from_custom","value":"fn <'a, R, T> (reader: R) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Deserializes an object from a custom `BincodeRead`er using the default configuration.\n It is highly recommended to use `deserialize_from` unless you need to implement\n `BincodeRead` for performance reasons.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":731},"span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/lib.rs","byte_start":3842,"byte_end":3862,"line_start":129,"line_end":129,"column_start":8,"column_end":28},"name":"deserialize_in_place","qualname":"::deserialize_in_place","value":"fn <'a, R, T> (reader: R, place: &mut T) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Only use this if you know what you're doing.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":735},"span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/lib.rs","byte_start":4130,"byte_end":4141,"line_start":138,"line_end":138,"column_start":8,"column_end":19},"name":"deserialize","qualname":"::deserialize","value":"fn <'a, T> (bytes: &'a [u8]) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Deserializes a slice of bytes into an instance of `T` using the default configuration.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":738},"span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/lib.rs","byte_start":4369,"byte_end":4384,"line_start":146,"line_end":146,"column_start":8,"column_end":23},"name":"serialized_size","qualname":"::serialized_size","value":"fn <T> (value: &T) -> Result<u64>","parent":null,"children":[],"decl_id":null,"docs":" Returns the size that an object would be if serialized using Bincode with the default configuration.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":740},"span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/lib.rs","byte_start":4619,"byte_end":4636,"line_start":156,"line_end":156,"column_start":8,"column_end":25},"name":"with_deserializer","qualname":"::with_deserializer","value":"fn <'a, A, R> (reader: R, acceptor: A) -> A::Output","parent":null,"children":[],"decl_id":null,"docs":" Executes the acceptor with a serde::Deserializer instance.\n NOT A PART OF THE STABLE PUBLIC API\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":744},"span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/lib.rs","byte_start":4924,"byte_end":4939,"line_start":167,"line_end":167,"column_start":8,"column_end":23},"name":"with_serializer","qualname":"::with_serializer","value":"fn <A, W> (writer: W, acceptor: A) -> A::Output","parent":null,"children":[],"decl_id":null,"docs":" Executes the acceptor with a serde::Serializer instance.\n NOT A PART OF THE STABLE PUBLIC API\n","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/config.rs","byte_start":6479,"byte_end":6480,"line_start":54,"line_end":54,"column_start":33,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/config.rs","byte_start":6490,"byte_end":6504,"line_start":56,"line_end":56,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":58}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/config.rs","byte_start":6599,"byte_end":6613,"line_start":62,"line_end":62,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/config.rs","byte_start":8022,"byte_end":8036,"line_start":113,"line_end":113,"column_start":32,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":79}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/config.rs","byte_start":8273,"byte_end":8288,"line_start":123,"line_end":123,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":83}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/config.rs","byte_start":8542,"byte_end":8557,"line_start":133,"line_end":133,"column_start":54,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/config.rs","byte_start":8771,"byte_end":8785,"line_start":143,"line_end":143,"column_start":54,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/config.rs","byte_start":10013,"byte_end":10019,"line_start":184,"line_end":184,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":106},{"krate":0,"index":108},{"krate":0,"index":111},{"krate":0,"index":114},{"krate":0,"index":118},{"krate":0,"index":121},{"krate":0,"index":124},{"krate":0,"index":128},{"krate":0,"index":132},{"krate":0,"index":136},{"krate":0,"index":140}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/de/read.rs","byte_start":31670,"byte_end":31681,"line_start":39,"line_end":39,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":176}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/de/read.rs","byte_start":31847,"byte_end":31855,"line_start":46,"line_end":46,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":179}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/de/read.rs","byte_start":32056,"byte_end":32067,"line_start":56,"line_end":56,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":182},{"krate":0,"index":183}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/de/read.rs","byte_start":32375,"byte_end":32383,"line_start":67,"line_end":67,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":186},{"krate":0,"index":187}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/de/read.rs","byte_start":32656,"byte_end":32667,"line_start":78,"line_end":78,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":190}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/de/read.rs","byte_start":32925,"byte_end":32936,"line_start":88,"line_end":88,"column_start":42,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":193},{"krate":0,"index":196},{"krate":0,"index":197}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/de/read.rs","byte_start":34260,"byte_end":34268,"line_start":134,"line_end":134,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":201}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/de/read.rs","byte_start":34714,"byte_end":34722,"line_start":153,"line_end":153,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":205},{"krate":0,"index":207},{"krate":0,"index":208}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/de/mod.rs","byte_start":17010,"byte_end":17022,"line_start":32,"line_end":32,"column_start":44,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":219},{"krate":0,"index":220},{"krate":0,"index":221},{"krate":0,"index":224},{"krate":0,"index":225}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/de/mod.rs","byte_start":24029,"byte_end":24035,"line_start":267,"line_end":267,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":282},{"krate":0,"index":283},{"krate":0,"index":285}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/de/mod.rs","byte_start":25853,"byte_end":25859,"line_start":329,"line_end":329,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":307},{"krate":0,"index":309}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/error.rs","byte_start":37246,"byte_end":37255,"line_start":42,"line_end":42,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":351},{"krate":0,"index":352}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/error.rs","byte_start":38715,"byte_end":38720,"line_start":76,"line_end":76,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":354}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/error.rs","byte_start":38827,"byte_end":38836,"line_start":82,"line_end":82,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":356}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/error.rs","byte_start":39914,"byte_end":39919,"line_start":105,"line_end":105,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":358}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/error.rs","byte_start":40060,"byte_end":40065,"line_start":111,"line_end":111,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":361}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/internal.rs","byte_start":41313,"byte_end":41322,"line_start":45,"line_end":45,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":385},{"krate":0,"index":386}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/internal.rs","byte_start":44628,"byte_end":44635,"line_start":164,"line_end":164,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":427},{"krate":0,"index":428}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/internal.rs","byte_start":44965,"byte_end":44973,"line_start":181,"line_end":181,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":430},{"krate":0,"index":431}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/ser/mod.rs","byte_start":45687,"byte_end":45697,"line_start":24,"line_end":24,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":451}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/ser/mod.rs","byte_start":51841,"byte_end":51852,"line_start":244,"line_end":244,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":504},{"krate":0,"index":505},{"krate":0,"index":506}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/ser/mod.rs","byte_start":57020,"byte_end":57028,"line_start":447,"line_end":447,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":562},{"krate":0,"index":563},{"krate":0,"index":564},{"krate":0,"index":566}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/ser/mod.rs","byte_start":57420,"byte_end":57428,"line_start":469,"line_end":469,"column_start":47,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":571},{"krate":0,"index":572},{"krate":0,"index":573},{"krate":0,"index":575}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/ser/mod.rs","byte_start":57826,"byte_end":57834,"line_start":491,"line_end":491,"column_start":53,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":580},{"krate":0,"index":581},{"krate":0,"index":582},{"krate":0,"index":584}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/ser/mod.rs","byte_start":58231,"byte_end":58239,"line_start":513,"line_end":513,"column_start":54,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":589},{"krate":0,"index":590},{"krate":0,"index":591},{"krate":0,"index":593}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/ser/mod.rs","byte_start":58627,"byte_end":58635,"line_start":535,"line_end":535,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":598},{"krate":0,"index":599},{"krate":0,"index":600},{"krate":0,"index":602},{"krate":0,"index":604}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/ser/mod.rs","byte_start":59205,"byte_end":59213,"line_start":565,"line_end":565,"column_start":48,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":609},{"krate":0,"index":610},{"krate":0,"index":611},{"krate":0,"index":613}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/ser/mod.rs","byte_start":59631,"byte_end":59639,"line_start":587,"line_end":587,"column_start":55,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":618},{"krate":0,"index":619},{"krate":0,"index":620},{"krate":0,"index":622}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/ser/mod.rs","byte_start":60143,"byte_end":60155,"line_start":613,"line_end":613,"column_start":51,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":630},{"krate":0,"index":631},{"krate":0,"index":632},{"krate":0,"index":634}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/ser/mod.rs","byte_start":60514,"byte_end":60526,"line_start":631,"line_end":631,"column_start":53,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":638},{"krate":0,"index":639},{"krate":0,"index":640},{"krate":0,"index":642}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/ser/mod.rs","byte_start":60891,"byte_end":60903,"line_start":649,"line_end":649,"column_start":59,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":646},{"krate":0,"index":647},{"krate":0,"index":648},{"krate":0,"index":650}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/ser/mod.rs","byte_start":61267,"byte_end":61279,"line_start":667,"line_end":667,"column_start":60,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":654},{"krate":0,"index":655},{"krate":0,"index":656},{"krate":0,"index":658}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/ser/mod.rs","byte_start":61639,"byte_end":61651,"line_start":685,"line_end":685,"column_start":56,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":662},{"krate":0,"index":663},{"krate":0,"index":664},{"krate":0,"index":666},{"krate":0,"index":668}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/ser/mod.rs","byte_start":62188,"byte_end":62200,"line_start":711,"line_end":711,"column_start":54,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":672},{"krate":0,"index":673},{"krate":0,"index":674},{"krate":0,"index":676}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/ser/mod.rs","byte_start":62585,"byte_end":62597,"line_start":729,"line_end":729,"column_start":61,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":680},{"krate":0,"index":681},{"krate":0,"index":682},{"krate":0,"index":684}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/ser/mod.rs","byte_start":64024,"byte_end":64034,"line_start":784,"line_end":784,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":699}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/config.rs","byte_start":5643,"byte_end":5650,"line_start":22,"line_end":22,"column_start":30,"column_end":37},"kind":"SuperTrait","from":{"krate":0,"index":39},"to":{"krate":0,"index":43}},{"span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/config.rs","byte_start":5653,"byte_end":5658,"line_start":22,"line_end":22,"column_start":40,"column_end":45},"kind":"SuperTrait","from":{"krate":2,"index":1543},"to":{"krate":0,"index":43}},{"span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/config.rs","byte_start":6479,"byte_end":6480,"line_start":54,"line_end":54,"column_start":33,"column_end":34},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":56},"to":{"krate":0,"index":43}},{"span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/config.rs","byte_start":6490,"byte_end":6504,"line_start":56,"line_end":56,"column_start":6,"column_end":20},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":36},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/config.rs","byte_start":6599,"byte_end":6613,"line_start":62,"line_end":62,"column_start":18,"column_end":32},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":36},"to":{"krate":0,"index":39}},{"span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/config.rs","byte_start":8022,"byte_end":8036,"line_start":113,"line_end":113,"column_start":32,"column_end":46},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":66},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/config.rs","byte_start":8273,"byte_end":8288,"line_start":123,"line_end":123,"column_start":32,"column_end":47},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":71},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/config.rs","byte_start":8542,"byte_end":8557,"line_start":133,"line_end":133,"column_start":54,"column_end":69},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":71},"to":{"krate":0,"index":39}},{"span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/config.rs","byte_start":8771,"byte_end":8785,"line_start":143,"line_end":143,"column_start":54,"column_end":68},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":66},"to":{"krate":0,"index":39}},{"span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/config.rs","byte_start":10013,"byte_end":10019,"line_start":184,"line_end":184,"column_start":6,"column_end":12},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":63},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/de/read.rs","byte_start":30749,"byte_end":30753,"line_start":9,"line_end":9,"column_start":38,"column_end":42},"kind":"SuperTrait","from":{"krate":1,"index":2860},"to":{"krate":0,"index":160}},{"span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/de/read.rs","byte_start":31670,"byte_end":31681,"line_start":39,"line_end":39,"column_start":16,"column_end":27},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":167},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/de/read.rs","byte_start":31847,"byte_end":31855,"line_start":46,"line_end":46,"column_start":9,"column_end":17},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":170},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/de/read.rs","byte_start":32056,"byte_end":32067,"line_start":56,"line_end":56,"column_start":29,"column_end":40},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":167},"to":{"krate":1,"index":2860}},{"span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/de/read.rs","byte_start":32375,"byte_end":32383,"line_start":67,"line_end":67,"column_start":32,"column_end":40},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":170},"to":{"krate":1,"index":2860}},{"span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/de/read.rs","byte_start":32656,"byte_end":32667,"line_start":78,"line_end":78,"column_start":16,"column_end":27},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":167},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/de/read.rs","byte_start":32925,"byte_end":32936,"line_start":88,"line_end":88,"column_start":42,"column_end":53},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":167},"to":{"krate":0,"index":160}},{"span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/de/read.rs","byte_start":34260,"byte_end":34268,"line_start":134,"line_end":134,"column_start":9,"column_end":17},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":170},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/de/read.rs","byte_start":34714,"byte_end":34722,"line_start":153,"line_end":153,"column_start":33,"column_end":41},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":170},"to":{"krate":0,"index":160}},{"span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/de/mod.rs","byte_start":17010,"byte_end":17022,"line_start":32,"line_end":32,"column_start":44,"column_end":56},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":210},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/de/mod.rs","byte_start":24029,"byte_end":24035,"line_start":267,"line_end":267,"column_start":17,"column_end":23},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":270},"to":{"krate":16,"index":1334}},{"span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/de/mod.rs","byte_start":25853,"byte_end":25859,"line_start":329,"line_end":329,"column_start":17,"column_end":23},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":292},"to":{"krate":16,"index":1352}},{"span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/error.rs","byte_start":37246,"byte_end":37255,"line_start":42,"line_end":42,"column_start":19,"column_end":28},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":787},"to":{"krate":1,"index":1625}},{"span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/error.rs","byte_start":38715,"byte_end":38720,"line_start":76,"line_end":76,"column_start":26,"column_end":31},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":349},"to":{"krate":2,"index":2227}},{"span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/error.rs","byte_start":38827,"byte_end":38836,"line_start":82,"line_end":82,"column_start":23,"column_end":32},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":787},"to":{"krate":2,"index":7578}},{"span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/error.rs","byte_start":39914,"byte_end":39919,"line_start":105,"line_end":105,"column_start":27,"column_end":32},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":349},"to":{"krate":16,"index":8042}},{"span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/error.rs","byte_start":40060,"byte_end":40065,"line_start":111,"line_end":111,"column_start":28,"column_end":33},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":349},"to":{"krate":16,"index":8640}},{"span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/internal.rs","byte_start":41313,"byte_end":41322,"line_start":45,"line_end":45,"column_start":34,"column_end":43},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":813},"to":{"krate":0,"index":423}},{"span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/internal.rs","byte_start":44014,"byte_end":44019,"line_start":146,"line_end":146,"column_start":29,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":2185},"to":{"krate":0,"index":423}},{"span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/internal.rs","byte_start":44628,"byte_end":44635,"line_start":164,"line_end":164,"column_start":20,"column_end":27},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":820},"to":{"krate":0,"index":423}},{"span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/internal.rs","byte_start":44965,"byte_end":44973,"line_start":181,"line_end":181,"column_start":20,"column_end":28},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":826},"to":{"krate":0,"index":423}},{"span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/ser/mod.rs","byte_start":45687,"byte_end":45697,"line_start":24,"line_end":24,"column_start":28,"column_end":38},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":443},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/ser/mod.rs","byte_start":51841,"byte_end":51852,"line_start":244,"line_end":244,"column_start":18,"column_end":29},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":499},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/ser/mod.rs","byte_start":57020,"byte_end":57028,"line_start":447,"line_end":447,"column_start":45,"column_end":53},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":553},"to":{"krate":16,"index":1693}},{"span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/ser/mod.rs","byte_start":57420,"byte_end":57428,"line_start":469,"line_end":469,"column_start":47,"column_end":55},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":553},"to":{"krate":16,"index":1699}},{"span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/ser/mod.rs","byte_start":57826,"byte_end":57834,"line_start":491,"line_end":491,"column_start":53,"column_end":61},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":553},"to":{"krate":16,"index":1705}},{"span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/ser/mod.rs","byte_start":58231,"byte_end":58239,"line_start":513,"line_end":513,"column_start":54,"column_end":62},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":553},"to":{"krate":16,"index":1711}},{"span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/ser/mod.rs","byte_start":58627,"byte_end":58635,"line_start":535,"line_end":535,"column_start":45,"column_end":53},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":553},"to":{"krate":16,"index":1717}},{"span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/ser/mod.rs","byte_start":59205,"byte_end":59213,"line_start":565,"line_end":565,"column_start":48,"column_end":56},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":553},"to":{"krate":16,"index":1728}},{"span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/ser/mod.rs","byte_start":59631,"byte_end":59639,"line_start":587,"line_end":587,"column_start":55,"column_end":63},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":553},"to":{"krate":16,"index":1735}},{"span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/ser/mod.rs","byte_start":60143,"byte_end":60155,"line_start":613,"line_end":613,"column_start":51,"column_end":63},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":623},"to":{"krate":16,"index":1693}},{"span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/ser/mod.rs","byte_start":60514,"byte_end":60526,"line_start":631,"line_end":631,"column_start":53,"column_end":65},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":623},"to":{"krate":16,"index":1699}},{"span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/ser/mod.rs","byte_start":60891,"byte_end":60903,"line_start":649,"line_end":649,"column_start":59,"column_end":71},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":623},"to":{"krate":16,"index":1705}},{"span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/ser/mod.rs","byte_start":61267,"byte_end":61279,"line_start":667,"line_end":667,"column_start":60,"column_end":72},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":623},"to":{"krate":16,"index":1711}},{"span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/ser/mod.rs","byte_start":61639,"byte_end":61651,"line_start":685,"line_end":685,"column_start":56,"column_end":68},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":623},"to":{"krate":16,"index":1717}},{"span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/ser/mod.rs","byte_start":62188,"byte_end":62200,"line_start":711,"line_end":711,"column_start":54,"column_end":66},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":623},"to":{"krate":16,"index":1728}},{"span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/ser/mod.rs","byte_start":62585,"byte_end":62597,"line_start":729,"line_end":729,"column_start":61,"column_end":73},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":623},"to":{"krate":16,"index":1735}},{"span":{"file_name":"/Users/yunyizhang/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.2.0/src/ser/mod.rs","byte_start":64024,"byte_end":64034,"line_start":784,"line_end":784,"column_start":6,"column_end":16},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":694},"to":{"krate":4294967295,"index":4294967295}}]}